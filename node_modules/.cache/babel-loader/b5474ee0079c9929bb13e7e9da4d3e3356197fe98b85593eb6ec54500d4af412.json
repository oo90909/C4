{"ast":null,"code":"import { Result, ethers } from 'ethers';\nimport ABI from '../contracts/Branding.json';\nimport axios from 'axios';\nlet provider = new ethers.BrowserProvider(window.ethereum);\n\n//这里改一下，再把json换了\nconst userAddress = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\nconst contractAddress = \"0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6\";\nconst marketAddress = \"0xD631348E8915dbBc1F1D18FE6DCBFD6cd8514e6c\";\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\nexport async function balanceOf() {\n  const result = await contract.dinLength();\n  return Number(result);\n}\n\n//返回owner\nexport async function tokenOfOwnerByIndex(isDin, index) {\n  const result = await contract.getOwner(isDin, index);\n  return result;\n}\nexport async function tokenURI(isDin, tokenId) {\n  const result = await getMetadata(isDin, tokenId, 7);\n  return result;\n}\n\n//第三个参数是几，就拿到这个结构体里面的第几个属性\nexport async function getMetadata(isDin, tokenId, choose) {\n  if (isDin == true) {\n    const result = await contract.getDinosaurValue(tokenId, choose);\n    return result;\n  } else {\n    const result = await contract.getEggValue(tokenId, choose);\n    return result;\n  }\n}\nexport async function buy(isDin, tokenId, value) {\n  console.log(\"value:\", value);\n  console.log(\"isDin:\", isDin);\n  console.log(\"isDin:\", tokenId);\n  const tx = await contract.buy(isDin, tokenId, {\n    value: value\n  });\n  const result = await tx.wait();\n  return tx.hash;\n}\nexport async function upload(isDin, tokenId, price) {\n  const tx = await contract.upload(isDin, tokenId, price);\n  const result = await tx.wait();\n  return result.hash;\n}\nexport async function cancelOrder(isDin, tokenId) {\n  const result = await buy(isDin, tokenId);\n}\n\n//获取的是id\nexport async function getAllNFTs(isDin) {\n  if (isDin === true) {\n    const result = await contract.getWhoseDinosaur(marketAddress, 0);\n    const length = result[1];\n    console.log(\"result length is:\", length);\n    var pop = new Array(length);\n    for (let i = 0; i < 2; i++) {\n      console.log(\"i is:\", i);\n      let number = await contract.getWhoseDinosaur(marketAddress, i);\n      console.log(\"number is:\", Number(number[0]));\n      pop[i] = Number(number[0]);\n    }\n    return pop;\n  } else {\n    const result = await contract.getWhoseEgg(marketAddress, 0);\n    const length = result[1];\n    console.log(\"result length is:\", length);\n    var pop = new Array(length);\n    for (let i = 0; i < 2; i++) {\n      console.log(\"i is:\", i);\n      let number = await contract.getWhoseEgg(marketAddress, i);\n      console.log(\"number is:\", Number(number[0]));\n      pop[i] = Number(number[0]);\n    }\n    return pop;\n  }\n}\nexport async function getMyNFTs(isDin) {\n  if (isDin === true) {\n    const result = await contract.getWhoseDinosaur(userAddress, 0);\n    const length = result[1];\n    console.log(\"result length is:\", length);\n    var pop = new Array(length);\n    for (let i = 0; i < 2; i++) {\n      console.log(\"i is:\", i);\n      let number = await contract.getWhoseDinosaur(userAddress, i);\n      console.log(\"number is:\", Number(number[0]));\n      pop[i] = Number(number[0]);\n    }\n    return pop;\n  } else {\n    const result = await contract.getWhoseEgg(userAddress, 0);\n    const length = result[1];\n    console.log(\"result length is:\", length);\n    var pop = new Array(length);\n    for (let i = 0; i < 2; i++) {\n      console.log(\"i is:\", i);\n      let number = await contract.getWhoseEgg(userAddress, i);\n      console.log(\"number is:\", Number(number[0]));\n      pop[i] = Number(number[0]);\n    }\n    return pop;\n  }\n}\nexport async function getWhoseLength(isDin, address) {\n  if (isDin == true) {\n    const length = await contract.getWhoseDinosaur(address, 1);\n    return length[1];\n  } else {\n    const length = await contract.getWhoseEgg(address, 1);\n    return length[1];\n  }\n}","map":{"version":3,"names":["Result","ethers","ABI","axios","provider","BrowserProvider","window","ethereum","userAddress","contractAddress","marketAddress","contract","Contract","getSigner","balanceOf","result","dinLength","Number","tokenOfOwnerByIndex","isDin","index","getOwner","tokenURI","tokenId","getMetadata","choose","getDinosaurValue","getEggValue","buy","value","console","log","tx","wait","hash","upload","price","cancelOrder","getAllNFTs","getWhoseDinosaur","length","pop","Array","i","number","getWhoseEgg","getMyNFTs","getWhoseLength","address"],"sources":["D:/software/compile Practice/code/codeHomework/sunYinpin/src/utils/branding.js"],"sourcesContent":["import { Result, ethers } from 'ethers';\r\nimport ABI from '../contracts/Branding.json';\r\nimport axios from 'axios';\r\n\r\nlet provider = new ethers.BrowserProvider(window.ethereum)\r\n\r\n//这里改一下，再把json换了\r\nconst userAddress=\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\r\nconst contractAddress = \"0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6\";\r\nconst marketAddress=\"0xD631348E8915dbBc1F1D18FE6DCBFD6cd8514e6c\";\r\n\r\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\r\n\r\nexport async function balanceOf() {\r\n    const result = await contract.dinLength();\r\n    return Number(result);\r\n}\r\n\r\n//返回owner\r\nexport async function tokenOfOwnerByIndex(isDin,index) {\r\n    const result= await contract.getOwner(isDin,index);\r\n    return result;\r\n}\r\n\r\nexport async function tokenURI(isDin,tokenId) {\r\n    const result= await getMetadata(isDin,tokenId,7)\r\n    return result;\r\n}\r\n\r\n//第三个参数是几，就拿到这个结构体里面的第几个属性\r\nexport async function getMetadata(isDin,tokenId,choose) {\r\n   \r\nif(isDin==true){\r\n    const result = await contract.getDinosaurValue(tokenId,choose);\r\n    return result\r\n}else{\r\n    const result = await contract.getEggValue(tokenId,choose);\r\n    return result\r\n}\r\n}\r\n\r\nexport async function buy(isDin,tokenId,value) {\r\n    console.log(\"value:\",value)\r\n    console.log(\"isDin:\",isDin)\r\n    console.log(\"isDin:\",tokenId)\r\n    const tx = await contract.buy(isDin,tokenId,{value:value});\r\n    const result = await tx.wait();\r\n    return tx.hash\r\n}\r\n\r\nexport async function upload(isDin ,tokenId,price){\r\n    const tx = await contract.upload(isDin,tokenId,price);\r\n    const result = await tx.wait();\r\n   return result.hash;\r\n}\r\n\r\n\r\nexport async function cancelOrder(isDin,tokenId) {\r\n  const result =  await buy(isDin,tokenId);\r\n}\r\n\r\n//获取的是id\r\nexport async function getAllNFTs(isDin) {\r\n    if(isDin===true){\r\n        const result = await contract.getWhoseDinosaur(marketAddress,0);\r\n        const length=result[1];\r\n        console.log(\"result length is:\",length)\r\nvar pop=new Array(length);\r\n        for(let i=0;i<2;i++){\r\n          console.log(\"i is:\",i)\r\n          let number = await contract.getWhoseDinosaur(marketAddress,i);\r\n          console.log(\"number is:\",Number(number[0]))\r\n          pop[i]=Number(number[0]);\r\n        }\r\n        return pop;\r\n    }else{\r\n      const result = await contract.getWhoseEgg(marketAddress,0);\r\n      const length=result[1];\r\n      console.log(\"result length is:\",length)\r\nvar pop=new Array(length);\r\n      for(let i=0;i<2;i++){\r\n        console.log(\"i is:\",i)\r\n        let number = await contract.getWhoseEgg(marketAddress,i);\r\n        console.log(\"number is:\",Number(number[0]))\r\n        pop[i]=Number(number[0]);\r\n      }\r\n      return pop;\r\n    } \r\n   \r\n} \r\n \r\nexport async function getMyNFTs(isDin) { \r\n  if(isDin===true){\r\n    const result = await contract.getWhoseDinosaur(userAddress,0);\r\n    const length=result[1];\r\n    console.log(\"result length is:\",length)\r\nvar pop=new Array(length);\r\n    for(let i=0;i<2;i++){\r\n      console.log(\"i is:\",i)\r\n      let number = await contract.getWhoseDinosaur(userAddress,i);\r\n      console.log(\"number is:\",Number(number[0]))\r\n      pop[i]=Number(number[0]);\r\n    }\r\n    return pop;\r\n}else{\r\n  const result = await contract.getWhoseEgg(userAddress,0);\r\n  const length=result[1];\r\n  console.log(\"result length is:\",length)\r\nvar pop=new Array(length);\r\n  for(let i=0;i<2;i++){\r\n    console.log(\"i is:\",i)\r\n    let number = await contract.getWhoseEgg(userAddress,i);\r\n    console.log(\"number is:\",Number(number[0]))\r\n    pop[i]=Number(number[0]);\r\n  }\r\n  return pop;\r\n} \r\n}\r\n\r\nexport async function getWhoseLength(isDin,address){\r\n  if(isDin==true){\r\n    const length=await contract.getWhoseDinosaur(address,1);\r\n  return length[1]\r\n  }else{\r\n    const length=await contract.getWhoseEgg(address,1);\r\nreturn length[1]\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
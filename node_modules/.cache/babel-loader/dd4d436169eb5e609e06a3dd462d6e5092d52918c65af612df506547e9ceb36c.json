{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\compile Practice\\\\code\\\\codeHomework\\\\sunYinpin\\\\src\\\\components\\\\Dragen.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport DragenCard from './DragenCard.js';\nimport { balanceOf, getAllNFTs, getMetadata, getMyNFTs, getWhoseLength } from '../utils/branding.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dragen = whoseAddress => {\n  _s();\n  //调用getallNFt方法获取所有NFT\n\n  const [DragensData, setDragensData] = useState([]);\n  const navigate = useNavigate();\n  const handleCardClick = tokenId => {\n    navigate(`/dragon-detail/${tokenId}`);\n  };\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const length = await getWhoseLength(true, whoseAddress);\n      console.log('length', length);\n      const array = await getMyNFTs(true);\n      console.log(\"array:\", array);\n      for (let i = 0; i < length; i++) {\n        const tokenId = Number(array[i]);\n        console.log('i', tokenId);\n        setDragensData(prev => [...prev, tokenId]);\n        setDragensData(prev => [...new Set(prev)]);\n      }\n    };\n    fetchNFTs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dradngen Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dradngen-container\",\n      style: {\n        width: '20%'\n      },\n      children: DragensData.map(dradngen => /*#__PURE__*/_jsxDEV(DragenCard, {\n        tokenId: dradngen,\n        onClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dragen, \"v7Q/Pmfc1lCrvAm5d/jB/ZWDvcc=\", false, function () {\n  return [useNavigate];\n});\n_c = Dragen;\nexport default Dragen;\nvar _c;\n$RefreshReg$(_c, \"Dragen\");","map":{"version":3,"names":["useState","useEffect","DragenCard","balanceOf","getAllNFTs","getMetadata","getMyNFTs","getWhoseLength","useNavigate","jsxDEV","_jsxDEV","Dragen","whoseAddress","_s","DragensData","setDragensData","navigate","handleCardClick","tokenId","fetchNFTs","length","console","log","array","i","Number","prev","Set","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","map","dradngen","onClick","_c","$RefreshReg$"],"sources":["D:/software/compile Practice/code/codeHomework/sunYinpin/src/components/Dragen.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport DragenCard from './DragenCard.js';\r\nimport {balanceOf,getAllNFTs,getMetadata,getMyNFTs, getWhoseLength} from '../utils/branding.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Dragen = (whoseAddress) => {\r\n  //调用getallNFt方法获取所有NFT\r\n\r\n  const [DragensData, setDragensData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleCardClick = (tokenId) => {\r\n    navigate(`/dragon-detail/${tokenId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchNFTs = async () => {\r\n      const length = await getWhoseLength(true,whoseAddress);\r\n      console.log('length', length)\r\n      const array = await getMyNFTs(true);\r\n      console.log(\"array:\",array)\r\n      for (let i = 0; i < length; i++) {\r\n        const tokenId=Number(array[i]);\r\n        console.log('i', tokenId)\r\n        setDragensData((prev) => [...prev, tokenId]);\r\n        setDragensData((prev) => [...new Set(prev)])\r\n      }\r\n    };\r\n    fetchNFTs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dradngen Component</h1>\r\n      <div className=\"dradngen-container\" style={{ width: '20%' }}>\r\n        {DragensData.map((dradngen) => (\r\n          <DragenCard tokenId={dradngen} onClick={handleCardClick} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dragen;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,SAAQC,SAAS,EAACC,UAAU,EAACC,WAAW,EAACC,SAAS,EAAEC,cAAc,QAAO,sBAAsB;AAC/F,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,MAAM,GAAIC,YAAY,IAAK;EAAAC,EAAA;EAC/B;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMgB,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAG9B,MAAMS,eAAe,GAAIC,OAAO,IAAK;IACnCF,QAAQ,CAAE,kBAAiBE,OAAQ,EAAC,CAAC;EACvC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IAEd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMb,cAAc,CAAC,IAAI,EAACK,YAAY,CAAC;MACtDS,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC7B,MAAMG,KAAK,GAAG,MAAMjB,SAAS,CAAC,IAAI,CAAC;MACnCe,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,KAAK,CAAC;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;QAC/B,MAAMN,OAAO,GAACO,MAAM,CAACF,KAAK,CAACC,CAAC,CAAC,CAAC;QAC9BH,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEJ,OAAO,CAAC;QACzBH,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAER,OAAO,CAAC,CAAC;QAC5CH,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAG,IAAIC,GAAG,CAACD,IAAI,CAAC,CAAC,CAAC;MAC9C;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA;MAAKuB,SAAS,EAAC,oBAAoB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EACzDd,WAAW,CAACsB,GAAG,CAAEC,QAAQ,iBACxB3B,OAAA,CAACR,UAAU;QAACgB,OAAO,EAAEmB,QAAS;QAACC,OAAO,EAAErB;MAAgB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCIF,MAAM;EAAA,QAIOH,WAAW;AAAA;AAAA+B,EAAA,GAJxB5B,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
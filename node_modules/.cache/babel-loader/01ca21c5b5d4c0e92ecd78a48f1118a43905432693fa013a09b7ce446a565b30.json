{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\compile Practice\\\\code\\\\codeHomework\\\\sunYinpin\\\\src\\\\components\\\\NFTGrid.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NFTCard from './NFTCard';\nimport { balanceOf, tokenOfOwnerByIndex } from '../utils/nft';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTGrid = () => {\n  _s();\n  const [nfts, setNfts] = useState([]);\n  const navigate = useNavigate();\n  const handleCardClick = tokenId => {\n    navigate(`/nft-detail/${tokenId}`);\n  };\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const length = await balanceOf(\"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1\");\n      console.log('length', length);\n      for (let i = 0; i < length; i++) {\n        const tokenId = await tokenOfOwnerByIndex(\"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1\", i);\n        console.log('i', i);\n        setNfts(prev => [...prev, tokenId]);\n        setNfts(prev => [...new Set(prev)]);\n      }\n    };\n    fetchNFTs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-grid\",\n    children: nfts.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n      tokenId: nft,\n      onClick: () => handleCardClick(nft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(NFTGrid, \"GJomSBWWGRDzjBUjfs7gfltPpOw=\", false, function () {\n  return [useNavigate];\n});\n_c = NFTGrid;\nexport default NFTGrid;\nvar _c;\n$RefreshReg$(_c, \"NFTGrid\");","map":{"version":3,"names":["useState","useEffect","useNavigate","NFTCard","balanceOf","tokenOfOwnerByIndex","jsxDEV","_jsxDEV","NFTGrid","_s","nfts","setNfts","navigate","handleCardClick","tokenId","fetchNFTs","length","console","log","i","prev","Set","className","children","map","nft","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/software/compile Practice/code/codeHomework/sunYinpin/src/components/NFTGrid.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NFTCard from './NFTCard'; \r\nimport { balanceOf, tokenOfOwnerByIndex } from '../utils/nft';\r\nimport '../App.css';\r\n\r\n\r\nconst NFTGrid = () => {\r\n  const [nfts, setNfts] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardClick = (tokenId) => {\r\n    navigate(`/nft-detail/${tokenId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchNFTs = async () => {\r\n      const length = await balanceOf(\"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1\");\r\n      console.log('length', length)\r\n      for (let i = 0; i < length; i++) {\r\n        const tokenId = await tokenOfOwnerByIndex(\"0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1\", i);\r\n        console.log('i', i)\r\n        setNfts((prev) => [...prev, tokenId]);\r\n        setNfts((prev) => [...new Set(prev)])\r\n      }\r\n    };\r\n    fetchNFTs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"nft-grid\">\r\n      {nfts.map(nft => (\r\n        <NFTCard tokenId={nft} onClick={() => handleCardClick(nft)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NFTGrid;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,mBAAmB,QAAQ,cAAc;AAC7D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,eAAe,GAAIC,OAAO,IAAK;IACnCF,QAAQ,CAAE,eAAcE,OAAQ,EAAC,CAAC;EACpC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMZ,SAAS,CAAC,4CAA4C,CAAC;MAC5Ea,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;MAC7B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;QAC/B,MAAML,OAAO,GAAG,MAAMT,mBAAmB,CAAC,4CAA4C,EAAEc,CAAC,CAAC;QAC1FF,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEC,CAAC,CAAC;QACnBR,OAAO,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEN,OAAO,CAAC,CAAC;QACrCH,OAAO,CAAES,IAAI,IAAK,CAAC,GAAG,IAAIC,GAAG,CAACD,IAAI,CAAC,CAAC,CAAC;MACvC;IACF,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKe,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBb,IAAI,CAACc,GAAG,CAACC,GAAG,iBACXlB,OAAA,CAACJ,OAAO;MAACW,OAAO,EAAEW,GAAI;MAACC,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACY,GAAG;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7BID,OAAO;EAAA,QAEMN,WAAW;AAAA;AAAA6B,EAAA,GAFxBvB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
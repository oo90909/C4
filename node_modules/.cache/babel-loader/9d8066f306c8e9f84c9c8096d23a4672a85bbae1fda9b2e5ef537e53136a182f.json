{"ast":null,"code":"import { ethers } from 'ethers';\nimport ABI from '../contracts/Market.json';\nlet provider = new ethers.BrowserProvider(window.ethereum);\nconst contractAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\";\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\nexport async function buy(tokenId) {\n  const result = await contract.buy(tokenId);\n  console.log('buy', result.hash);\n}\nexport async function changePrice(tokenId, price) {\n  const result = await contract.changePrice(tokenId, price);\n  console.log('change price', result.hash);\n}\nexport async function cancelOrder(tokenId) {\n  const result = await contract.cancelOrder(tokenId);\n  console.log('cancel order', result.hash);\n}\nexport async function getAllNFTs() {\n  const result = await contract.getAllNFTs();\n  console.log(result);\n}\nexport async function getMyNFTs() {\n  const result = await contract.getMyNFTs();\n  console.log(result);\n}\nexport async function getOrder(tokenId) {\n  const result = await contract.orderOfId(tokenId);\n  return {\n    seller: result[0],\n    tokenId: Number(result[1]),\n    price: Number(result[2]) / 1e18\n  };\n}","map":{"version":3,"names":["ethers","ABI","provider","BrowserProvider","window","ethereum","contractAddress","contract","Contract","getSigner","buy","tokenId","result","console","log","hash","changePrice","price","cancelOrder","getAllNFTs","getMyNFTs","getOrder","orderOfId","seller","Number"],"sources":["D:/software/compile Practice/code/codeHomework/sunYinpin/src/utils/market.js"],"sourcesContent":["import { ethers } from 'ethers';\r\nimport ABI from '../contracts/Market.json';\r\n\r\nlet provider = new ethers.BrowserProvider(window.ethereum)\r\nconst contractAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\";\r\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\r\n\r\nexport async function buy(tokenId) {\r\n  const result = await contract.buy(tokenId);\r\n  console.log('buy', result.hash);\r\n}\r\n\r\nexport async function changePrice(tokenId, price) {\r\n  const result = await contract.changePrice(tokenId, price);\r\n  console.log('change price', result.hash);\r\n}\r\n\r\nexport async function cancelOrder(tokenId) {\r\n  const result = await contract.cancelOrder(tokenId);\r\n  console.log('cancel order', result.hash);\r\n}\r\n\r\nexport async function getAllNFTs() {\r\n  const result = await contract.getAllNFTs();\r\n  console.log(result);\r\n}\r\n\r\nexport async function getMyNFTs() {\r\n  const result = await contract.getMyNFTs();\r\n  console.log(result);\r\n}\r\n\r\nexport async function getOrder(tokenId) {\r\n  const result = await contract.orderOfId(tokenId);\r\n  return {\r\n    seller: result[0],\r\n    tokenId: Number(result[1]),\r\n    price: Number(result[2]) / 1e18,\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,0BAA0B;AAE1C,IAAIC,QAAQ,GAAG,IAAIF,MAAM,CAACG,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;AAC1D,MAAMC,eAAe,GAAG,4CAA4C;AACpE,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,QAAQ,CAACF,eAAe,EAAEL,GAAG,EAAE,MAAMC,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC;AAEtF,OAAO,eAAeC,GAAGA,CAACC,OAAO,EAAE;EACjC,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;EAC1CE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,MAAM,CAACG,IAAI,CAAC;AACjC;AAEA,OAAO,eAAeC,WAAWA,CAACL,OAAO,EAAEM,KAAK,EAAE;EAChD,MAAML,MAAM,GAAG,MAAML,QAAQ,CAACS,WAAW,CAACL,OAAO,EAAEM,KAAK,CAAC;EACzDJ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,IAAI,CAAC;AAC1C;AAEA,OAAO,eAAeG,WAAWA,CAACP,OAAO,EAAE;EACzC,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACW,WAAW,CAACP,OAAO,CAAC;EAClDE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,IAAI,CAAC;AAC1C;AAEA,OAAO,eAAeI,UAAUA,CAAA,EAAG;EACjC,MAAMP,MAAM,GAAG,MAAML,QAAQ,CAACY,UAAU,CAAC,CAAC;EAC1CN,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;AACrB;AAEA,OAAO,eAAeQ,SAASA,CAAA,EAAG;EAChC,MAAMR,MAAM,GAAG,MAAML,QAAQ,CAACa,SAAS,CAAC,CAAC;EACzCP,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;AACrB;AAEA,OAAO,eAAeS,QAAQA,CAACV,OAAO,EAAE;EACtC,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACe,SAAS,CAACX,OAAO,CAAC;EAChD,OAAO;IACLY,MAAM,EAAEX,MAAM,CAAC,CAAC,CAAC;IACjBD,OAAO,EAAEa,MAAM,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1BK,KAAK,EAAEO,MAAM,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG;EAC7B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
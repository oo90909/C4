{"ast":null,"code":"import { ethers } from 'ethers';\nimport ABI from '../contracts/MyNFT.json';\nimport axios from 'axios';\nlet provider = new ethers.BrowserProvider(window.ethereum);\nconst contractAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\nexport async function balanceOf(address) {\n  const result = await contract.balanceOf(address);\n  return Number(result);\n}\nexport async function tokenOfOwnerByIndex(owner, index) {\n  const result = await contract.tokenOfOwnerByIndex(owner, index);\n  return Number(result);\n}\nexport async function tokenURI(tokenId) {\n  const result = await contract.tokenURI(tokenId);\n  console.log(result);\n}\nexport async function getMetadata(tokenId) {\n  const result = await contract.tokenURI(tokenId);\n  const response = await axios.get(result);\n  return {\n    title: response.data.title,\n    description: response.data.description,\n    imageURL: response.data.image\n  };\n}","map":{"version":3,"names":["ethers","ABI","axios","provider","BrowserProvider","window","ethereum","contractAddress","contract","Contract","getSigner","balanceOf","address","result","Number","tokenOfOwnerByIndex","owner","index","tokenURI","tokenId","console","log","getMetadata","response","get","title","data","description","imageURL","image"],"sources":["D:/software/compile Practice/code/codeHomework/sunYinpin/src/utils/nft.js"],"sourcesContent":["import { ethers } from 'ethers';\r\nimport ABI from '../contracts/MyNFT.json';\r\nimport axios from 'axios';\r\n\r\nlet provider = new ethers.BrowserProvider(window.ethereum)\r\nconst contractAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\r\nconst contract = new ethers.Contract(contractAddress, ABI, await provider.getSigner());\r\n\r\nexport async function balanceOf(address) {\r\n    const result = await contract.balanceOf(address);\r\n    return Number(result);\r\n}\r\n\r\nexport async function tokenOfOwnerByIndex(owner, index) {\r\n    const result = await contract.tokenOfOwnerByIndex(owner, index);\r\n    return Number(result);\r\n}\r\n\r\nexport async function tokenURI(tokenId) {\r\n    const result = await contract.tokenURI(tokenId);\r\n    console.log(result);\r\n}\r\n\r\nexport async function getMetadata(tokenId) {\r\n    const result = await contract.tokenURI(tokenId);\r\n    const response = await axios.get(result);\r\n    return {\r\n        title: response.data.title,\r\n        description: response.data.description,\r\n        imageURL: response.data.image,\r\n    }\r\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAIC,QAAQ,GAAG,IAAIH,MAAM,CAACI,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;AAC1D,MAAMC,eAAe,GAAG,4CAA4C;AACpE,MAAMC,QAAQ,GAAG,IAAIR,MAAM,CAACS,QAAQ,CAACF,eAAe,EAAEN,GAAG,EAAE,MAAME,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC;AAEtF,OAAO,eAAeC,SAASA,CAACC,OAAO,EAAE;EACrC,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACG,SAAS,CAACC,OAAO,CAAC;EAChD,OAAOE,MAAM,CAACD,MAAM,CAAC;AACzB;AAEA,OAAO,eAAeE,mBAAmBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACpD,MAAMJ,MAAM,GAAG,MAAML,QAAQ,CAACO,mBAAmB,CAACC,KAAK,EAAEC,KAAK,CAAC;EAC/D,OAAOH,MAAM,CAACD,MAAM,CAAC;AACzB;AAEA,OAAO,eAAeK,QAAQA,CAACC,OAAO,EAAE;EACpC,MAAMN,MAAM,GAAG,MAAML,QAAQ,CAACU,QAAQ,CAACC,OAAO,CAAC;EAC/CC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;AACvB;AAEA,OAAO,eAAeS,WAAWA,CAACH,OAAO,EAAE;EACvC,MAAMN,MAAM,GAAG,MAAML,QAAQ,CAACU,QAAQ,CAACC,OAAO,CAAC;EAC/C,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACX,MAAM,CAAC;EACxC,OAAO;IACHY,KAAK,EAAEF,QAAQ,CAACG,IAAI,CAACD,KAAK;IAC1BE,WAAW,EAAEJ,QAAQ,CAACG,IAAI,CAACC,WAAW;IACtCC,QAAQ,EAAEL,QAAQ,CAACG,IAAI,CAACG;EAC5B,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}